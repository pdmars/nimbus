<?xml version="1.0"?>

<project default="create-dist" name="Nimbus release build-file" basedir=".">

    <description>
        Nimbus buildfile to generate releases.
    </description>

    <property environment="env"/>
    <property name="deploy.dir" location="${env.GLOBUS_LOCATION}"/>
    <property file="./build.properties"/>

    <!-- ==== Clean targets ========================================= -->

    <target name="clean" depends="clean-local, clean-distfiles"
            description="Clean everything including '../*' project files">

        <ant dir="${nimbus.main.builddir}" target="clean-all"/>
    </target>

    <target name="clean-local" description="Clean local artifacts">
        <delete dir="${distbuild.dir}"/>
        <delete file=".ant-targets-build.xml"/>
    </target>

    <target name="clean-distfiles" description="Clean release files">
        <delete dir="${dist.dir}"/>
    </target>

    <!-- ==== Distribution target =========================== -->

    <!-- The all encompassing target, use this to create a release: -->
    <target name="create-dist"
            depends="clean, create-src-dists, create-bin-dists"
            description="Create the distribution">
        <!-- afterwards, clean intermediate artifacts -->
        <antcall target="clean-local"/>
    </target>

    <target name="init">
        <mkdir dir="${distbuild.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>

    <!-- ==== Utility targets =========================== -->

    <target name="fetch-wscore" unless="wscore.exists">
        <mkdir dir="${wscore.destdir}"/>
        <get src="${wscore.url}" dest="${wscore.dest}" />
    </target>

    <target name="assure-wscore">
        <available file="${wscore.dest}" property="wscore.exists"/>
        <antcall target="fetch-wscore"/>
    </target>

    <!-- ==== Source distribution targets =========================== -->

    <target name="create-src-dists"
            depends="service-src, control-src" />

    <target name="service-src" depends="init, assure-wscore">

        <mkdir dir="${distbuild.dir}/${nimbus.main}"/>

        <copy todir="${distbuild.dir}/${nimbus.main}/scripts">
            <fileset dir="${nimbus.basedir}/scripts">
                <exclude name="${nimbus.basedir}/scripts/lib/gt4.0/dist" />
                <exclude name="${nimbus.basedir}/scripts/lib/gt4.0/brokerdist" />
            </fileset>
        </copy>

        <copy tofile="${distbuild.dir}/${nimbus.main}/install"
            file="${nimbus.basedir}/install"/>

        <copy todir="${distbuild.dir}/${nimbus.main}/cumulus">
            <fileset dir="${nimbus.basedir}/cumulus"/>
        </copy>

        <copy todir="${distbuild.dir}/${nimbus.main}/libexec">
            <fileset dir="${nimbus.basedir}/libexec"/>
        </copy>
        
        <copy todir="${distbuild.dir}/${nimbus.main}/tmp">
            <fileset dir="${nimbus.basedir}/tmp"/>
        </copy>

        <copy todir="${distbuild.dir}/${nimbus.main}/">
            <fileset dir="topdocs"/>
        </copy>
        
        <copy todir="${distbuild.dir}/${nimbus.main}/lantorrent">
            <fileset dir="${nimbus.basedir}/lantorrent"/>
        </copy>

        <chmod perm="755">
            <fileset dir="${distbuild.dir}/${nimbus.main}/scripts">
                <include name="*"/>
            </fileset>
            <fileset dir="${nimbus.basedir}/home/bin">
                <include name="*"/>
            </fileset>
            <fileset dir="${distbuild.dir}/${nimbus.main}/lantorrent">
                <include name="*.sh"/>
            </fileset>
            <fileset dir="${nimbus.basedir}/libexec">
                <include name="*"/>
            </fileset>
            <fileset dir="${nimbus.basedir}/home/libexec">
                <include name="*"/>
            </fileset>
            <fileset dir="${nimbus.basedir}/web/bin">
                <include name="*"/>
            </fileset>
            <fileset dir="${nimbus.basedir}/web/sbin">
                <include name="*"/>
            </fileset>
        </chmod>
        <copy todir="${distbuild.dir}/${nimbus.main}/authzdb">
            <fileset dir="${nimbus.basedir}/authzdb"/>
        </copy>
        <copy todir="${distbuild.dir}/${nimbus.main}/query">
            <fileset dir="${nimbus.basedir}/query"/>
        </copy>
        <copy todir="${distbuild.dir}/${nimbus.main}/autocommon">
            <fileset dir="${nimbus.basedir}/autocommon"/>
        </copy>
        <copy todir="${distbuild.dir}/${nimbus.main}/autoconfiguration">
            <fileset dir="${nimbus.basedir}/autoconfiguration"/>
        </copy>
        <copy todir="${distbuild.dir}/${nimbus.main}/ctx-broker">
            <fileset dir="${nimbus.basedir}/ctx-broker"/>
        </copy>
        <copy todir="${distbuild.dir}/${nimbus.main}/home">
            <fileset dir="${nimbus.basedir}/home"/>
        </copy>
        <copy todir="${distbuild.dir}/${nimbus.main}/lib">
            <fileset dir="${nimbus.basedir}/lib"/>
        </copy>
        <copy todir="${distbuild.dir}/${nimbus.main}/messaging">
            <fileset dir="${nimbus.basedir}/messaging"/>
        </copy>
        <copy todir="${distbuild.dir}/${nimbus.main}/metadata">
            <fileset dir="${nimbus.basedir}/metadata"/>
        </copy>
        <copy todir="${distbuild.dir}/${nimbus.main}/monitoring">
            <fileset dir="${nimbus.basedir}/monitoring"/>
        </copy>
        <copy todir="${distbuild.dir}/${nimbus.main}/service">
            <fileset dir="${nimbus.basedir}/service"/>
        </copy>
        <copy todir="${distbuild.dir}/${nimbus.main}/service-api">
            <fileset dir="${nimbus.basedir}/service-api"/>
        </copy>
        <copy todir="${distbuild.dir}/${nimbus.main}/web">
            <fileset dir="${nimbus.basedir}/web"/>
        </copy>
        
        <patternset id="service-src-fileset">
            <include name="${nimbus.main}/*.*"/>
            <include name="${nimbus.main}/scripts/**"/>
            <include name="${nimbus.main}/authzdb/**"/>
            <include name="${nimbus.main}/query/**"/>
            <include name="${nimbus.main}/autocommon/**"/>
            <include name="${nimbus.main}/autoconfiguration/**"/>
            <include name="${nimbus.main}/ctx-broker/**"/>
            <include name="${nimbus.main}/home/**"/>
            <include name="${nimbus.main}/lantorrent/**"/>
            <include name="${nimbus.main}/lib/**"/>
            <include name="${nimbus.main}/messaging/**"/>
            <include name="${nimbus.main}/monitoring/**"/>
            <include name="${nimbus.main}/metadata/**"/>
            <include name="${nimbus.main}/plugins/**"/>
            <include name="${nimbus.main}/service/**"/>
            <include name="${nimbus.main}/service-api/**"/>
            <include name="${nimbus.main}/tmp/**"/>
            <include name="${nimbus.main}/web/**"/>
        </patternset>

        <fixcrlf srcdir="${distbuild.dir}/${nimbus.main}" includes="**/*.java"
               tab="remove" tablength="4" eol="lf" javafiles="yes"/>

        <tar destfile="${distbuild.dir}/${nimbus.main}.tar" longfile="gnu">

            <tarfileset dir="${distbuild.dir}">
                <patternset refid="service-src-fileset"/>
            </tarfileset>
            <tarfileset dir="${distbuild.dir}" mode="755">
                <include name="${nimbus.main}/scripts/**" />
                <include name="${nimbus.main}/cumulus/**" />
                <include name="${nimbus.main}/install" />
                <include name="${nimbus.main}/scripts/install-from" />
                <include name="${nimbus.main}/lantorrent/*sh" />
                <include name="${nimbus.main}/home/bin/*" />
                <include name="${nimbus.main}/home/libexec/**" />
                <include name="${nimbus.main}/home/sbin/*" />
                <include name="${nimbus.main}/web/bin/*" />
                <include name="${nimbus.main}/web/sbin/*" />
                <include name="${nimbus.main}/libexec/**"/>
            </tarfileset>
        </tar>

        <gzip src="${distbuild.dir}/${nimbus.main}.tar"
              destfile="${dist.dir}/${nimbus.main}.${tgz.suffix}"/>
        
        <delete file="${distbuild.dir}/${nimbus.main}.tar"/>
        
    </target>

    <target name="control-src" depends="init">

        <mkdir dir="${distbuild.dir}/${nimbus.controls}"/>
        <mkdir dir="${nimbus.controls.dest}" />
        <mkdir dir="${nimbus.controls2.dest}" />

        <copy todir="${nimbus.controls.dest}">
            <fileset dir="${nimbus.controls.builddir}">
                <include name="*"/>
            </fileset>
        </copy>
        <copy todir="${nimbus.controls.dest}/bin">
            <fileset dir="${nimbus.controls.builddir}/bin"/>
        </copy>
        <copy todir="${nimbus.controls.dest}/etc">
            <fileset dir="${nimbus.controls.builddir}/etc"/>
        </copy>
        <copy todir="${nimbus.controls.dest}/lantorrent">
            <fileset dir="${nimbus.basedir}/lantorrent"/>
        </copy>
        <copy todir="${nimbus.controls.dest}/lib">
            <fileset dir="${nimbus.controls.builddir}/lib"/>
        </copy>
        <copy todir="${nimbus.controls.dest}/libexec">
            <fileset dir="${nimbus.controls.builddir}/libexec"/>
        </copy>
        <copy todir="${nimbus.controls.dest}/sbin">
            <fileset dir="${nimbus.controls.builddir}/sbin"/>
        </copy>
        <copy todir="${nimbus.controls.dest}/share">
            <fileset dir="${nimbus.controls.builddir}/share"/>
        </copy>
        <copy todir="${nimbus.controls.dest}/src">
            <fileset dir="${nimbus.controls.builddir}/src"/>
        </copy>
        <copy todir="${nimbus.controls.dest}/var">
            <fileset dir="${nimbus.controls.builddir}/var"/>
        </copy>
        
        <chmod perm="755" type="file">
          <fileset dir="${nimbus.controls.dest}" includes="bin/" />
          <fileset dir="${nimbus.controls.dest}" includes="sbin/" />
          <fileset dir="${nimbus.controls.dest}/libexec"
                   includes="workspace-control/" />
          <fileset dir="${nimbus.controls.dest}/lantorrent">
              <include name="*.sh"/>
          </fileset>
        </chmod>
        
        <copy todir="${nimbus.controls2.dest}/">
            <fileset file="${nimbus.controls2.builddir}/workspacepilot.py"/>
        </copy>

    <!--
        <tar destfile="${distbuild.dir}/${nimbus.controls}.tar"
             longfile="gnu">
            <tarfileset dir="${distbuild.dir}">
                <include name="${nimbus.controls}/**"/>
            </tarfileset>
        </tar> -->
        
        <exec executable="tar">
            <arg value="cvf"/>
            <arg value="${distbuild.dir}/${nimbus.controls}.tar"/>
            <arg value="-C"/>
            <arg value="${distbuild.dir}"/>
            <arg value="${nimbus.controls}/"/>
        </exec>

        <gzip src="${distbuild.dir}/${nimbus.controls}.tar"
              destfile="${dist.dir}/${nimbus.controls}.${tgz.suffix}"/>

        <delete file="${distbuild.dir}/${nimbus.controls}.tar"/>

    </target>

    <!-- ==== Special distribution targets =========================== -->

    <target name="web-autocommon">

        <ant dir="${nimbus.basedir}/autocommon" target="clean"/>
        <ant dir="${nimbus.basedir}/autocommon" target="dist"/>

        <mkdir dir="${nimbus.web.autocommon.distbuild.dir}"/>
        <mkdir dir="${nimbus.web.autocommon.distbuild.dir}/nimbus-autocommon"/>

        <copy todir="${nimbus.web.autocommon.distbuild.dir}/nimbus-autocommon">
            <fileset dir="${nimbus.basedir}/autocommon"/>
        </copy>

        <copy todir="${nimbus.web.autocommon.distbuild.dir}/nimbus-autocommon">
            <fileset dir="${nimbus.basedir}/lib/services/">
                <include name="axis.jar"/>
                <include name="cog-jglobus.jar"/>
                <include name="commons-logging.jar"/>
                <include name="jce-jdk13-125.jar"/>
                <include name="xalan-2.6.jar"/>
                <include name="xml-apis.jar"/>
            </fileset>
        </copy>

        <patternset id="autocommon-src-fileset">
            <include name="nimbus-autocommon/**"/>
        </patternset>

        <fixcrlf srcdir="${nimbus.web.autocommon.distbuild.dir}/nimbus-autocommon" includes="**/*.java"
               tab="remove" tablength="4" eol="lf" javafiles="yes"/>

        <tar destfile="${nimbus.web.autocommon.distbuild.dir}/nimbus-autocommon.tar" longfile="gnu">
            <tarfileset dir="${nimbus.web.autocommon.distbuild.dir}">
                <patternset refid="autocommon-src-fileset"/>
            </tarfileset>
        </tar>

        <gzip src="${nimbus.web.autocommon.distbuild.dir}/nimbus-autocommon.tar"
              destfile="${nimbus.basedir}/web/lib/nimbus-autocommon.tar.gz"/>

        <!-- <delete dir="${nimbus.web.autocommon.distbuild.dir}"/> -->
    </target>

    
    <!-- ==== Binary distribution targets =========================== -->

    <target name="create-bin-dists"
            depends="client-bin" />

    <target name="client-bin" depends="init">

        <echo message="client-bin todo... " />

        <!--
        <mkdir dir="${distbuild.dir}/${nimbus.client}"/>

        <copy todir="${distbuild.dir}/${vws.client.binary}/common">
            <fileset dir="${nimbus.service.build}/common"/>
        </copy>
        <copy todir="${distbuild.dir}/${vws.client.binary}/client">
            <fileset dir="${nimbus.service.build}/client"/>
        </copy>
        <copy todir="${distbuild.dir}/${vws.client.binary}">
            <fileset dir="${nimbus.service.build}">
                <include name="build.*"/>
            </fileset>
        </copy>

        <ant dir="${distbuild.dir}/${vws.client.binary}"
             target="deploy-client-only"/>

        <mkdir dir="${vws.client.binary}"/>

        <copy todir="${vws.client.binary}" flatten="true">
            <fileset dir="${distbuild.dir}/${vws.client.binary}"
                     casesensitive="yes">
                <include name="**/*.gar"/>
            </fileset>
        </copy>
        -->

        <!-- ant's copy task does not preserve permissions -->
        <!--
        <exec executable="cp" >
            <arg value="-p" />
            <arg value="scripts/deploy-client-gars.sh" />
            <arg value="${vws.client.binary}" />
        </exec>
        -->

        <!-- ant's tar task does not preserve permissions either -->
        <!--
        <exec executable="tar" >
            <arg value="czf" />
            <arg value="${dist.dir}/${vws.client.binary}.${tgz.suffix}" />
            <arg value="${vws.client.binary}/" />
        </exec>
        <delete dir="${vws.client.binary}"/>
        -->

    </target>


</project>
