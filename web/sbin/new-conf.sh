#!/bin/bash

PYTHON_EXE="/usr/bin/env python -Wignore::DeprecationWarning"

NIMBUS_WEBDIR_REL="`dirname $0`/.."
NIMBUS_WEBDIR=`cd $NIMBUS_WEBDIR_REL; pwd`

if [ ! -d $NIMBUS_WEBDIR/var ]; then
    mkdir $NIMBUS_WEBDIR/var
    if [ $? -ne 0 ]; then
        echo "Could not create $NIMBUS_WEBDIR/var"
        exit 1
    fi
fi

# Force this directory to be private.
chmod 700 $NIMBUS_WEBDIR/var
if [ $? -ne 0 ]; then
    echo ""
    echo "Could not set permissions on $NIMBUS_WEBDIR/var"
    echo "Exiting."
    exit 1
fi


# Force src directory to be private, it has secrets in the settings (which
# cannot be individually chmod'd because pyc files are generated with open perms
chmod 700 $NIMBUS_WEBDIR/src/python/nimbusweb/portal
if [ $? -ne 0 ]; then
    echo ""
    echo "Could not set permissions on $NIMBUS_WEBDIR/var"
    echo "Exiting."
    exit 1
fi

NIMBUS_PYLIB="$NIMBUS_WEBDIR/lib/python"
NIMBUS_PYSRC="$NIMBUS_WEBDIR/src/python"

PYTHONPATH="$NIMBUS_PYSRC:$NIMBUS_PYLIB:$PYTHONPATH"
export PYTHONPATH

NIMBUS_WEBCONF="$NIMBUS_WEBDIR/nimbusweb.conf"
if [ ! -f "$NIMBUS_WEBCONF" ]; then
    echo ""
    echo "Cannot find conf file, exiting. (expected @ '$NIMBUS_WEBCONF')"
    exit 1
fi

# The following script expands the tarballs in lib/ if necessary
$NIMBUS_WEBDIR/sbin/install-deps.sh $DEBUG
if [ $? -ne 0 ]; then
    echo ""
    echo "Dependencies are not set up properly, exiting."
    exit 3
fi

# write new generated_settings.py
$PYTHON_EXE $NIMBUS_PYSRC/nimbusweb/setup/setup.py --newconf --conf $NIMBUS_WEBCONF --basedir $NIMBUS_WEBDIR $@

RET=$?
if [ $RET -ne 0 ]; then
    exit $RET
fi

ENVF=$NIMBUS_WEBDIR/src/env.sh
if [ ! -s $ENVF ]; then
    echo "# For sourcing before launching an interactive shell, or using manage.py." >> $ENVF
    echo "# This file is autogenerated" >> $ENVF
    echo "NIMBUS_WEBDIR=\"$NIMBUS_WEBDIR\"" >> $ENVF
    echo "echo \"Based off main directory: \$NIMBUS_WEBDIR\"" >> $ENVF
    echo "NIMBUS_PYLIB=\"\$NIMBUS_WEBDIR/lib/python\"" >> $ENVF
    echo "NIMBUS_PYSRC=\"\$NIMBUS_WEBDIR/src/python\"" >> $ENVF
    echo "PYTHONPATH=\"\$NIMBUS_PYSRC:\$NIMBUS_PYLIB:\$PYTHONPATH\"" >> $ENVF
    echo "export PYTHONPATH" >> $ENVF
fi


# set up admin media to serve via cherrypy
SYMLINK=$NIMBUS_PYSRC/nimbusweb/portal/static/admin
if [ ! -h $SYMLINK ]; then
  ln -s ../../../../../lib/python/django/contrib/admin/media/ $SYMLINK
fi

if [ ! -s $NIMBUS_WEBDIR/var/nimbus.sqlite ]; then
    echo -e "\n*****************************************************************"
    echo -e "*****************************************************************\n"
    
    echo -e "You are going to be asked to create a superuser login.\n"
    echo "Type 'yes' and *choose a long, high quality password*"
    
    echo -e "\n*****************************************************************"
    echo -e "*****************************************************************\n"
    
    echo "Hit return to acknowledge this message."
    read dummy_value
fi

# In development mode, this will propagate schema changes every launch
# When used by users, this will make sure the sqlite DB file is set up
# before the first launch -- and also set up a superuser credential.
$PYTHON_EXE $NIMBUS_PYSRC/nimbusweb/portal/manage.py syncdb
exit $?
