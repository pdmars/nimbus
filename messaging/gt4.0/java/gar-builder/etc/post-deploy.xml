<?xml version="1.0"?>

<project default="setup" basedir="." name="post-deploy">

    <!-- ***********************************************************************
         PROPS
         ******************************************************************* -->

    <property environment="env" />
    <property name="env.GLOBUS_LOCATION" value="."/>
    <property name="deploy.dir" location="${env.GLOBUS_LOCATION}"/>

    <property name="base.package.name"
              value="nimbus" />

    <property name="base.conf.dir"
              value="${deploy.dir}/etc/${base.package.name}" />

    <property name="workspace.conf.dir"
              value="${base.conf.dir}/workspace-service" />

    <property name="elastic.conf.dir"
              value="${base.conf.dir}/elastic" />

    <property name="query.conf.dir"
              value="${base.conf.dir}/query" />
    
    <property name="rest.conf.dir"
              value="${base.conf.dir}/rest" />

    <property name="workspace.persistence.dir"
              value="${deploy.dir}/var/${base.package.name}" />

    <property name="print.relative.confdir"
              value="etc/${base.package.name}/workspace-service" />
              
    <property name="print.relative.queryconfdir"
              value="etc/${base.package.name}/query" />

    <property name="dbsetup.dir"
              location="${deploy.dir}/share/${base.package.name}"/>

    <property name="netdbsetup.dir"
              location="${deploy.dir}/share/${base.package.name}/netderby"/>

    <property name="dbsetup.antfile"
              location="${dbsetup.dir}/lib/db-mgmt.xml"/>

    <property name="build.launcher"
            location="${deploy.dir}/share/globus_wsrf_common/build-launcher.xml"/>

    
    <!-- replace absolute path tokens in these config files: -->
    
    <property name="jndi.path"
              location="${base.conf.dir}/jndi-config.xml"/>
    
    <property name="jndi.tmp"
              location="${base.conf.dir}/jndi-config.xml.tmp"/>

    <property name="wproperties.path"
              location="${workspace.conf.dir}/other/main.conflocator.xml"/>

    <property name="wproperties.tmp"
              location="${workspace.conf.dir}/other/main.conflocator.xml.tmp"/>

    <property name="eproperties.path"
              location="${elastic.conf.dir}/other/main.conflocator.xml"/>

    <property name="eproperties.tmp"
              location="${elastic.conf.dir}/other/main.conflocator.xml.tmp"/>

    <property name="wproperties2.path"
              location="${workspace.conf.dir}/other/common.conf"/>

    <property name="wproperties2.tmp"
              location="${workspace.conf.dir}/other/common.conf.tmp"/>

    <property name="qproperties.path"
              location="${query.conf.dir}/other/main.conflocator.xml"/>

    <property name="qproperties.tmp"
              location="${query.conf.dir}/other/main.conflocator.xml.tmp"/>

    <property name="qproperties2.path"
              location="${query.conf.dir}/query.conf"/>

    <property name="qproperties2.tmp"
              location="${query.conf.dir}/query.conf.tmp"/>
    
    <property name="rproperties.path"
              location="${rest.conf.dir}/other/main.conflocator.xml"/>

    <property name="rproperties.tmp"
              location="${rest.conf.dir}/other/main.conflocator.xml.tmp"/>

    <property name="rproperties2.path"
              location="${rest.conf.dir}/rest.conf"/>

    <property name="rproperties2.tmp"
              location="${rest.conf.dir}/rest.conf.tmp"/>

    <filterset id="absPathFilter">
        <filter token="DEPLOY_DIR"
                value="${deploy.dir}"/>
        <filter token="WORKSPACE_CONFDIR"
                value="${workspace.conf.dir}"/>
        <filter token="ELASTIC_CONFDIR"
                value="${elastic.conf.dir}"/>
        <filter token="QUERY_CONFDIR"
                value="${query.conf.dir}"/>
        <filter token="REST_CONFDIR"
                value="${rest.conf.dir}"/>
        <filter token="WORKSPACE_PERSISTENCEDIR"
                value="${workspace.persistence.dir}"/>
        <filter token="DERBY_DIR"
                value="${deploy.dir}/var"/>
    </filterset>

    
    <!-- ***********************************************************************
         SETUP FOR CALLING db-mgmt.xml
         ******************************************************************* -->

    <!-- Write a properties file so that subsequent standalone invocations
         of db-mgmt.xml will work too -->
    <target name="create-db-props">
        <propertyfile file="${dbsetup.dir}/workspace.persistence.conf"
                      comment="Autogenerated by post-deploy">

            <entry key="workspace.dbdir.prop"
                   value="${workspace.persistence.dir}" />
            <entry key="workspace.sqldir.prop"
                   value="${dbsetup.dir}/lib" />
            <entry key="workspace.notifdir.prop"
                   value="${dbsetup.dir}/lib" />
            <entry key="derby.system.home.prop"
                   value="${deploy.dir}/var" />
            <entry key="derby.relative.dir.prop"
                   value="${base.package.name}" />
            <entry key="derby.classpath.dir.prop"
                   value="${deploy.dir}/lib" />
            <entry key="pwGen.path.prop"
                   value="${workspace.conf.dir}/other/shared-secret-suggestion.py"/>
            
        </propertyfile>
    </target>


    <!-- ***********************************************************************
         TARGET INVOKED AFTER GAR DEPLOYS
         ******************************************************************* -->

    <target name="setup"
            depends="adjust-wproperties, adjust-eproperties,
                     adjust-wproperties2, adjust-qproperties,
                     adjust-qproperties2, adjust-rproperties,
                     adjust-rproperties2, adjust-jndi,
                     chmodprivate, chmodexes, setupWorkspacePersistence" />


    <!-- ***********************************************************************
         CALL OUT TO db-mgmt.xml
         ******************************************************************* -->

    <target name="setupWorkspacePersistence" depends="create-db-props">

        <!-- that properties file is not picked up if just written, manually
             passing in the properties -->
        <property name="workspace.dbdir.prop"
                  value="${workspace.persistence.dir}" />
        <property name="workspace.sqldir.prop"
                  value="${dbsetup.dir}/lib" />
        <property name="workspace.notifdir.prop"
                  value="${dbsetup.dir}/lib" />
        <property name="derby.system.home.prop"
                  value="${deploy.dir}/var" />
        <property name="derby.relative.dir.prop"
                  value="${base.package.name}" />
        <property name="derby.classpath.dir.prop"
                  value="${deploy.dir}/lib" />
        <property name="pwGen.path.prop"
                   value="${workspace.conf.dir}/other/shared-secret-suggestion.py"/>

        <ant antfile="${dbsetup.antfile}" target="setupWorkspacePersistence" />
    </target>
    

    <!-- ***********************************************************************
         POST-DEPLOY WORK
         ******************************************************************* -->

    <target name="chmodexes">
        <chmod file="${workspace.conf.dir}/other/shared-secret-suggestion.py"
               perm="755"/>

        <chmod perm="755">
            <fileset dir="${dbsetup.dir}">
                <include name="*.sh"/>
            </fileset>
        </chmod>

        <!--
        Broken?
        <chmod perm="755">
            <fileset dir="${netdbsetup.dir}">
                <include name="*.sh"/>
            </fileset>
        </chmod>
        -->
    </target>

    <target name="chmodprivate">
        <chmod file="${workspace.conf.dir}/pilot-authz.conf"
               perm="600"/>
        <echo message="Ensured owner-only rw permissions: ${print.relative.confdir}/pilot-authz.conf"/>
        
        <chmod file="${qproperties2.path}"
               perm="600"/>
        <echo message="Ensured owner-only rw permissions: ${print.relative.queryconfdir}/query.conf"/>
        
        <chmod file="${query.conf.dir}/users.txt"
               perm="600"/>
        <echo message="Ensured owner-only rw permissions: ${print.relative.queryconfdir}/users.txt"/>
    </target>

    <target name="adjust-jndi">
        <copy file="${jndi.path}" toFile="${jndi.tmp}">
            <filterset refid="absPathFilter"/>
        </copy>
        <copy file="${jndi.tmp}" toFile="${jndi.path}"
              overwrite="true" />
        <delete file="${jndi.tmp}"/>
        <echo message="Adjusted JNDI config paths"/>
    </target>

    <target name="adjust-wproperties">
        <copy file="${wproperties.path}" toFile="${wproperties.tmp}">
            <filterset refid="absPathFilter"/>
        </copy>
        <copy file="${wproperties.tmp}" toFile="${wproperties.path}"
              overwrite="true" />
        <delete file="${wproperties.tmp}"/>
        <echo message="Adjusted workspace conf-locator paths"/>
    </target>

    <target name="adjust-eproperties">
        <copy file="${eproperties.path}" toFile="${eproperties.tmp}">
            <filterset refid="absPathFilter"/>
        </copy>
        <copy file="${eproperties.tmp}" toFile="${eproperties.path}"
              overwrite="true" />
        <delete file="${eproperties.tmp}"/>
        <echo message="Adjusted elastic conf-locator paths"/>
    </target>

    <target name="adjust-wproperties2">
        <copy file="${wproperties2.path}" toFile="${wproperties2.tmp}">
            <filterset refid="absPathFilter"/>
        </copy>
        <copy file="${wproperties2.tmp}" toFile="${wproperties2.path}"
              overwrite="true" />
        <delete file="${wproperties2.tmp}"/>
        <echo message="Adjusted workspace common.conf paths"/>
    </target>

    <target name="adjust-qproperties">
        <copy file="${qproperties.path}" toFile="${qproperties.tmp}">
            <filterset refid="absPathFilter"/>
        </copy>
        <copy file="${qproperties.tmp}" toFile="${qproperties.path}"
              overwrite="true" />
        <delete file="${qproperties.tmp}"/>
        <echo message="Adjusted query conf-locator paths"/>
    </target>

    <target name="adjust-qproperties2">
        <copy file="${qproperties2.path}" toFile="${qproperties2.tmp}">
            <filterset refid="absPathFilter"/>
        </copy>
        <copy file="${qproperties2.tmp}" toFile="${qproperties2.path}"
              overwrite="true" />
        <delete file="${qproperties2.tmp}"/>
        <echo message="Adjusted query.conf paths"/>
    </target>
    
    <target name="adjust-rproperties">
        <copy file="${rproperties.path}" toFile="${rproperties.tmp}">
            <filterset refid="absPathFilter"/>
        </copy>
        <copy file="${rproperties.tmp}" toFile="${rproperties.path}"
              overwrite="true" />
        <delete file="${rproperties.tmp}"/>
        <echo message="Adjusted rest conf-locator paths"/>
    </target>

    <target name="adjust-rproperties2">
        <copy file="${rproperties2.path}" toFile="${rproperties2.tmp}">
            <filterset refid="absPathFilter"/>
        </copy>
        <copy file="${rproperties2.tmp}" toFile="${rproperties2.path}"
              overwrite="true" />
        <delete file="${rproperties2.tmp}"/>
        <echo message="Adjusted rest.conf paths"/>
    </target>

</project>

